services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 5173:5173
    env_file:
      - .env
    depends_on:
      - server
    command: 
      - sh
      - -c 
      - "npm run dev -- --host"
    develop:
      watch:
        - action: sync
          path: ./client/src
          target: /app/src
        - action: rebuild
          path: ./client/package.json
    
  server:
    build: ./server
    ports:
      - 5001:5001
    depends_on: 
      postgres:
        condition: service_healthy
    env_file:
      - .env
    command: 
      - sh
      - -c
      - "npx sequelize-cli@latest db:migrate && npm start"
    restart: on-failure
    stdin_open: true
    tty: true
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: /app/src
        - action: rebuild
          path: ./server/package.json
        - action: rebuild
          path: ./server/app.js

  postgres:
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - .env
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
      - ./certs/:/etc/nginx/certs
    depends_on:
      - client
      - server

volumes:
  postgres-data: